/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */

struct ListNode* removeElements(struct ListNode* head, int val){
    // 题目描述：删除链表中等于值val的所有节点
    // 思路1：没有虚拟头节点的
    // 思路2：使用虚拟头节点

    struct ListNode* temp;
    while(head && head->val == val) {
        temp = head;
        head = head -> next;
        free(temp);
    }

    struct ListNode* cur= head;
    while(cur && cur->next) {
        if(cur->next->val == val) {
            cur->next = cur->next->next;
        } else {
            cur = cur->next;
        }

    }

    return head;

}




// ------------------------------------------- 带有虚拟头节点 ----------------------------------

struct ListNode* removeElements(struct ListNode* head, int val) {
    // 带有虚拟头节点的
    struct ListNode* dummyHead = malloc(sizeof(struct ListNode));
    dummyHead->next = head;
    struct ListNode* cur = dummyHead;
    
    while(cur->next != NULL) {
        if(cur->next->val == val) {
            cur->next = cur->next->next;
        } else {
            cur = cur->next;
        }
    }
    return dummyHead->next;
}





